<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.brilliance.com.cn/common" targetNamespace="http://www.brilliance.com.cn/common" elementFormDefault="qualified">
    <xs:element name="common">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="public" type="publicTyp" minOccurs="0" />
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="codetables" type="codetablesTyp" minOccurs="0" />
                    <xs:element name="modules" type="modulesTyp" minOccurs="0" />
                    <xs:element name="functions" type="functionsTyp" minOccurs="0" />
                </xs:choice>
                <xs:element name="counters" type="countersTyp" minOccurs="0" />
                <xs:element name="connections" type="connectionsTyp" minOccurs="0" />
                <xs:element name="filters" type="filtersTyp" minOccurs="0" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="countersTyp">
        <xs:sequence>
            <xs:element name="counter" type="CounterTyp" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CounterTyp">
        <xs:attribute name="tblnam" type="xs:string" />
        <xs:attribute name="source" type="xs:string" />
        <xs:attribute name="sql" type="xs:string" />
        <xs:attribute name="initSql" type="xs:string" />
        <xs:attribute name="value" type="xs:string" />
        <xs:attribute name="beforeStep" type="xs:boolean" />
    </xs:complexType>

    <xs:complexType name="functionTyp">
        <xs:sequence>
            <xs:element name="input" type="inputTyp" minOccurs="0" maxOccurs="unbounded" />
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:sequence>
                    <xs:element name="if" type="if1FuncTyp" />
                    <xs:element name="elseif" type="elseif1FuncTyp" minOccurs="0" maxOccurs="unbounded" />
                    <xs:element name="else" type="logic1FuncTyp" minOccurs="0" maxOccurs="1" />
                </xs:sequence>
                <xs:element name="while" type="while1FuncTyp" />
                <xs:element name="foreach" type="foreach1FuncTyp" />
                <xs:element name="field" type="field1FuncTyp" />
                <xs:element name="return" type="returnTyp" />
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="name" type="nonEmptyTyp" use="required" />
    </xs:complexType>
    <xs:complexType name="logic1FuncTyp">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:sequence>
                <xs:element name="if" type="if1FuncTyp" />
                <xs:element name="elseif" type="elseif1FuncTyp" minOccurs="0" maxOccurs="unbounded" />
                <xs:element name="else" type="logic1FuncTyp" minOccurs="0" maxOccurs="1" />
            </xs:sequence>
            <xs:element name="while" type="while1FuncTyp" />
            <xs:element name="foreach" type="foreach1FuncTyp" />
            <xs:element name="field" type="field1FuncTyp" />
            <xs:element name="return" type="returnTyp" />
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="if1FuncTyp">
        <xs:complexContent>
            <xs:extension base="logic1FuncTyp">
                <xs:attribute name="condition" type="nonEmptyTyp" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="elseif1FuncTyp">
        <xs:complexContent>
            <xs:extension base="logic1FuncTyp">
                <xs:attribute name="condition" type="nonEmptyTyp" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="while1FuncTyp">
        <xs:complexContent>
            <xs:extension base="logic1FuncTyp">
                <xs:attribute name="condition" type="nonEmptyTyp" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="foreach1FuncTyp">
        <xs:complexContent>
            <xs:extension base="logic1FuncTyp">
                <xs:attribute name="tag" type="nonEmptyTyp" use="required" />
                <xs:attribute name="begin" type="xs:string" />
                <xs:attribute name="step" type="xs:string" />
                <xs:attribute name="end" type="nonEmptyTyp" use="required" />
                <xs:attribute name="condition" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="argumentTyp">
        <xs:attribute name="id" type="nonEmptyTyp" />
        <xs:attribute name="value" type="xs:string" use="required" />
    </xs:complexType>
    <xs:complexType name="field1FuncTyp">
        <xs:sequence>
            <xs:element name="argument" type="argumentTyp" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="tag" type="nonEmptyTyp" />
        <xs:attribute name="value" type="xs:string" use="required" />
        <xs:attribute name="type" type="nonEmptyTyp" />
        <xs:attribute name="size" type="xs:string" />
        <xs:attribute name="fill">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="(left|right),[\s\S]" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="inputTyp">
        <xs:attribute name="tag" type="nonEmptyTyp" use="required" />
        <xs:attribute name="type" type="nonEmptyTyp" />
    </xs:complexType>
    <xs:complexType name="returnTyp">
        <xs:attribute name="value" type="xs:string" use="required" />
    </xs:complexType>
    <xs:complexType name="reflectTyp">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="constructor" type="constructorTyp" />
            <xs:element name="field" type="fieldAndMethodTyp" />
            <xs:element name="method" type="fieldAndMethodTyp" />
        </xs:choice>
        <xs:attribute name="class" type="nonEmptyTyp" use="required" />
        <xs:attribute name="static" type="xs:boolean" />
    </xs:complexType>
    <xs:complexType name="constructorTyp">
        <xs:attribute name="alias" type="nonEmptyTyp" />
        <xs:attribute name="type" type="xs:string" />
        <xs:attribute name="error" type="xs:string" />
    </xs:complexType>
    <xs:complexType name="fieldAndMethodTyp">
        <xs:complexContent>
            <xs:extension base="constructorTyp">
                <xs:attribute name="name" type="nonEmptyTyp" use="required" />
                <xs:attribute name="static" type="xs:boolean" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="moduleTyp">
        <xs:sequence>
            <xs:element name="field" type="field1ModuleTyp" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="nonEmptyTyp" use="required" />
        <xs:attribute name="type" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="iso8583" />
                    <xs:enumeration value="fixed" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="field1ModuleTyp">
        <xs:attribute name="tag" type="nonEmptyTyp" />
        <xs:attribute name="etag" type="xs:integer" use="required" />
        <xs:attribute name="type" type="nonEmptyTyp" use="required" />
        <xs:attribute name="size" type="xs:integer" />
        <xs:attribute name="varsize" type="xs:integer" />
    </xs:complexType>
    <xs:complexType name="codetableTyp">
        <xs:sequence>
            <xs:element name="code" type="codeTyp" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="nonEmptyTyp" use="required" />
        <xs:attribute name="sql" type="xs:string" />
    </xs:complexType>
    <xs:complexType name="codeTyp">
        <xs:attribute name="id" type="nonEmptyTyp" use="required" />
        <xs:attribute name="value" type="xs:string" />
    </xs:complexType>
    <xs:complexType name="publicTyp">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="sys" type="propertyTyp" />
            <xs:element name="extsys" type="extsysTyp" />
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="extsysTyp">
        <xs:sequence>
            <xs:element name="sys" type="propertyTyp" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="ref" type="nonEmptyTyp" use="required" />
        <xs:attribute name="type">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="properties" />
                    <xs:enumeration value="xml" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="connectionsTyp">
        <xs:sequence>
            <xs:element name="connection" type="ConnectionTyp" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ConnectionTyp">
        <xs:sequence>
            <xs:element name="property" type="propertyTyp" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="poolSetting" type="poolSettingTyp" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="id" type="nonEmptyTyp" use="required" />
        <xs:attribute name="class" type="nonEmptyTyp" use="required" />
        <xs:attribute name="pooled" type="xs:boolean" />
    </xs:complexType>
    <xs:complexType name="poolSettingTyp">
        <xs:sequence>
            <xs:element name="property" type="propertyTyp" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="filtersTyp">
        <xs:sequence>
            <xs:element name="filter" type="filterTyp" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="filterTyp">
        <xs:sequence>
            <xs:element name="parameter" type="parameterTyp" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="nonEmptyTyp" use="required" />
        <xs:attribute name="class" type="nonEmptyTyp" use="required" />
    </xs:complexType>
    <xs:simpleType name="nonEmptyTyp">
        <xs:restriction base="xs:string">
            <xs:pattern value="(\s*\S+\s*)+" />
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="propertyTyp">
        <xs:attribute name="name" type="nonEmptyTyp" use="required" />
        <xs:attribute name="value" type="xs:string" />
        <xs:attribute name="ref" type="xs:string" />
        <xs:attribute name="encrypt" type="encrypt" />
    </xs:complexType>
    <xs:complexType name="parameterTyp">
        <xs:attribute name="name" type="nonEmptyTyp" use="required" />
        <xs:attribute name="value" type="xs:string" />
        <xs:attribute name="ref" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="codetablesTyp">
        <xs:choice>
            <xs:element name="codetable" type="codetableTyp" minOccurs="0" maxOccurs="unbounded">
            </xs:element>
        </xs:choice>
        <xs:attribute name="id" type="xs:string" />
        <xs:attribute name="ref" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="functionsTyp">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="function" type="functionTyp" />
            <xs:element name="reflect" type="reflectTyp" />
        </xs:choice>
        <xs:attribute name="id" type="xs:string" />
        <xs:attribute name="ref" type="xs:string" />
    </xs:complexType>
    <xs:complexType name="modulesTyp">
        <xs:sequence>
            <xs:element name="module" type="moduleTyp" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" />
        <xs:attribute name="ref" type="xs:string" />
    </xs:complexType>
    <xs:simpleType name="encrypt">
        <xs:restriction base="xs:string">
            <xs:enumeration value="BASE64" />
            <xs:enumeration value="AES" />
            <xs:enumeration value="DES" />
            <xs:enumeration value="DESede" />
            <xs:enumeration value="IDEA" />
            <xs:enumeration value="PBE" />
            <xs:enumeration value="RSA" />
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
